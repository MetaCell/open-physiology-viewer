{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "schemes": {
    "ColorScheme": {
      "description": "Name of the color interpolation scheme as in d3-scale-chromatic",
      "type": "string",
      "enum": [
        "interpolateBrBG",
        "interpolatePRGn",
        "interpolatePiYG",
        "interpolatePuOr",
        "interpolateRdBu",
        "interpolateRdGy",
        "interpolateRdYlBu",
        "interpolateRdYlGn",
        "interpolateSpectral",
        "interpolateBuGn",
        "interpolateBuPu",
        "interpolateGnBu",
        "interpolateOrRd",
        "interpolatePuBuGn",
        "interpolatePuBu",
        "interpolatePuRd",
        "interpolateRdPu",
        "interpolateYlGnBu",
        "interpolateYlGn",
        "interpolateYlOrBr",
        "interpolateYlOrRd",
        "interpolateBlues",
        "interpolateGreens",
        "interpolateGreys",
        "interpolatePurples",
        "interpolateReds",
        "interpolateOranges",
        "interpolateCubehelixDefault",
        "interpolateRainbow",
        "interpolateViridis"
      ]
    },
    "GroupColorScheme": {
      "description": "Scheme to specify color interpolation for a group of entities",
      "type": "object",
      "properties": {
        "scheme": {
          "description": "Interpolation scheme to apply to a group of entities",
          "$ref": "#/schemes/ColorScheme"
        },
        "length": {
          "description": "Optional parameter to define number of colors from the color scheme",
          "type": "number"
        },
        "reversed": {
          "description": "Boolean parameter that indicates whether to pick up colors from the color scheme in reverse order",
          "type": "boolean"
        },
        "offset": {
          "description": "Colors at the beginning and at the end of the color arrays are too dark or too light, so we skip some percentage",
          "type": "number",
          "minimum": 0,
          "maximum": 1
        }
      }
    },
    "OffsetScheme": {
      "type": "object",
      "properties": {
        "start": {
          "type": "number",
          "default": 0,
          "minimum": 0,
          "maximum": 1
        },
        "end": {
          "type": "number",
          "default": 1,
          "minimum": 0,
          "maximum": 1
        },
        "step": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        }
      }
    },
    "JSONPathScheme": {
      "type": "object",
      "properties": {
        "path": {
          "description": "JSONPath expression to select entities",
          "type": "string"
        },
        "value": {
          "description": "A subset of entity properties to assign to all selected entities",
          "type": "object"
        }
      },
      "additionalProperties": false
    }
  },
  "definitions": {
    "Entity": {
      "description": "Generic abstract entity defines common properties for all elements in ApiNATOMY circuitboards",
      "type": "object",
      "abstract": "true",
      "properties": {
        "id": {
          "description": "Unique entity identifier",
          "type": "string"
        },
        "name": {
          "description": "Entity name",
          "type": "string"
        },
        "class": {
          "description": "Entity class",
          "type": "string",
          "enum": [
            "Lyph",
            "Link",
            "Node",
            "Border"
          ]
        },
        "color": {
          "description": "RGB color",
          "type": "string",
          "format": "rgbcolor",
          "pattern": "#([a-fA-F0-9]{6}|[a-fA-F0-9]{3}){1,2}|(rgb|hsl)a\\((\\d{1,3}%?,\\s?){3}(1|0?\\.\\d+)\\)|(rgb|hsl)\\(\\d{1,3}%?(,\\s?\\d{1,3}%?){2}\\)"
        },
        "external": {
          "description": "Identifier of the entity in an external ontology such as FMA",
          "type": "string"
        },
        "inGroups": {
          "description": "Groups that include this entity",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Graph"
              }
            ]
          },
          "relatedTo": "groups",
          "uniqueItems": true
        },
        "infoFields": {
          "description": "A set of properties shown in the info panel when entity is focused",
          "type": "object",
          "properties": {
            "text": {
              "description": "Properties that are displayed as text fields",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "objects": {
              "description": "Properties that are displayed as objects",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "lists": {
              "description": "Properties that are displayed as lists",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "text": [
              "id",
              "class",
              "name",
              "external"
            ],
            "objects": [],
            "lists": []
          }
        },
        "hidden": {
          "description": "A flag to indicate that this entity should not be visualized",
          "type": "boolean"
        },
        "inactive": {
          "description": "A boolean flag to indicate that this entity should not be manipulated (i.e., highlighted or toggled)",
          "type": "boolean"
        },
        "skipLabel": {
          "description": "A flag to indicate that this entity is visualized without the corresponding text label",
          "type": "boolean"
        },
        "assign": {
          "description": "Defines properties to assign to selected entities defined by JSON path starting from the current entity",
          "type": "array",
          "item": {
            "$ref": "#/schemes/JSONPathScheme"
          }
        },
        "interpolate": {
          "description": "Parameters defining schemes to interpolate properties of entities in the JSON path",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "path": {
                "description": "JSONPath expression to select group entities (default = '$.nodes[*]')",
                "type": "string"
              },
              "color": {
                "$ref": "#/schemes/GroupColorScheme"
              },
              "offset": {
                "$ref": "#/schemes/OffsetScheme"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    "Node": {
      "description": "Graph node joins two or more links (processes)",
      "type": "object",
      "extends": {
        "$ref": "#/definitions/Entity"
      },
      "properties": {
        "host": {
          "description": "A link on which this node is positioned",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Link"
            }
          ],
          "relatedTo": "hostedNodes"
        },
        "internalNodeInLyph":{
          "description": "A lyph on which this node is positioned",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "internalNodes"
        },
        "layout": {
          "description": "Positioning constraints, i.e., foci points that attract this node in the force-directed layout",
          "type": "object",
          "properties": {
            "x": {
              "type": "number",
              "minimum": -100,
              "maximum": 100
            },
            "y": {
              "type": "number",
              "minimum": -100,
              "maximum": 100
            },
            "z": {
              "type": "number",
              "minimum": -100,
              "maximum": 100
            }
          },
          "default": {}
        },
        "type": {
          "description": "Node type can be used to control the behavior of the node in the force-directed layout",
          "type": "string",
          "enum": [
            "core",
            "fixed",
            "control"
          ]
        },
        "val": {
          "description": "A value that defines the size of the node",
          "type": "number",
          "minimum": 0,
          "default": 1
        },
        "offset": {
          "description": "Defines position of the node on its host link, i.e, fraction of the link's length starting from the source node",
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "charge": {
          "description": "Defines the force with which this node attracts or repels other nodes in the force-directed graph",
          "type": "number",
          "default": 0
        },
        "collide": {
          "description": "Defines the radius for the collision force in the force-directed layout. The collision force treats nodes as circles with a given radius, rather than points, and prevents nodes from overlapping.",
          "type": "number",
          "default": 0
        }
      }
    },
    "Link": {
      "description": "Graph link schematically representing a (part of) physiological process",
      "extends": {
        "$ref": "#/definitions/Entity"
      },
      "properties": {
        "source": {
          "description": "Source node of the link",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Node"
            }
          ]
        },
        "target": {
          "description": "Target node of the link",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Node"
            }
          ]
        },
        "length": {
          "description": "The length of the link",
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "default": 1
        },
        "collapsible": {
          "description": "Indicates that the link disappears when its end nodes are not both constrained",
          "type": "boolean"
        },
        "conveyingLyph": {
          "description": "Conveying lyph for the process represented by the link",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "axis"
        },
        "type": {
          "description": "Defines the appearance and behavior of the link in the model graph.",
          "type": "string",
          "enum": [
            "link",
            "dashed",
            "semicircle",
            "container",
            "force",
            "invisible",
            "path"
          ],
          "default": "link"
        },
        "infoFields": {
          "default": {
            "text": [
              "length",
              "type"
            ],
            "objects": [
              "source",
              "target",
              "conveyingLyph"
            ]
          }
        },
        "reversed": {
          "description": "When set to true, the link's direction is reversed; it is used to turn the link's conveying lyph by 180 degrees",
          "type": "boolean",
          "default": false
        },
        "linkMethod": {
          "description": "Name of the custom written shader to draw lines (needed to overcome WebGL issue with thick lines)",
          "type": "string",
          "enum": [
            "Line2"
          ],
          "default": ""
        },
        "linewidth": {
          "description": "Link width for lines that are drawn using custom shader, makes sense when linkMethod is set to Line2",
          "type": "number",
          "default": "0.003"
        },
        "strength": {
          "description": "Link's strength reflects how strongly the link tries to satisfy its length constraint in the force-directed layout",
          "type": "number"
        },
        "hostedNodes": {
          "description": "Nodes that are positioned on the link",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Node"
              }
            ]
          },
          "relatedTo": "host",
          "uniqueItems": true
        }
      },
      "required": [
        "source",
        "target"
      ]
    },
    "Material": {
      "description": "Chemical elements and compounds",
      "extends": {
        "$ref": "#/definitions/Entity"
      }
    },
    "Lyph": {
      "description": "Data structure that defines the material composition and topology of body parts and physiological processes",
      "extends": {
        "$ref": "#/definitions/Entity"
      },
      "properties": {
        "axis": {
          "description": "Lyph's axis of rotation",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Link"
            }
          ],
          "relatedTo": "conveyingLyph"
        },
        "layers": {
          "description": "Lyph layers",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "layerInLyph",
          "uniqueItems": true
        },
        "layerInLyph": {
          "description": "A lyph in which the current lyph is hosted as layer",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "layers"
        },
        "topology": {
          "description": "Lyph topology defines its border shape",
          "type": "string",
          "enum": [
            "TUBE",
            "BAG",
            "BAG2",
            "CYST"
          ],
          "default": "TUBE"
        },
        "border": {
          "description": "Properties that apply to the lyph's border",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Border"
            }
          ],
          "relatedTo": "borderInLyph",
          "default": {}
        },
        "infoFields": {
          "default": {
            "text": [
              "topology",
              "width"
            ],
            "objects": [
              "axis"
            ],
            "lists": [
              "layers"
            ]
          }
        },
        "thickness": {
          "description": "Anatomical lyph thickness defined in the form of power of 1/10",
          "type": "object",
          "properties": {
            "min": {
              "type": "number"
            },
            "max": {
              "type": "number"
            }
          }
        },
        "length": {
          "description": "Anatomical lyph length defined in the form of power of 1/10",
          "type": "object",
          "properties": {
            "min": {
              "type": "number"
            },
            "max": {
              "type": "number"
            }
          }
        },
        "width": {
          "description": "Width of the visual object representing lyph",
          "type": "number"
        },
        "scale": {
          "description": "Defines the size of the conveying lyph as percentage of its axis' (link) length",
          "type": "object",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "default": {
            "width": 80,
            "height": 80
          }
        },
        "layerWidth": {
          "description": "Defines the percentage of the hosting lyph's width occupied by the given lyph as layer",
          "type": "number"
        },
        "height": {
          "description": "Height of the visual object representing lyph",
          "type": "number"
        },
        "offset": {
          "description": "The distance to which the lyph is shifted wrt its axis, it is used to position layers within their hosting lyph",
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "internalNodes": {
          "description": "Nodes that should be positioned on the given lyph",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Node"
              }
            ]
          },
          "relatedTo": "internalNodeInLyph",
          "uniqueItems": true
        },
        "internalLyphs": {
          "description": "Lyphs that should be positioned on the given lyph (corresponding axis (link and two nodes) is generated)",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "internalLyphInLyph"
        },
        "internalLyphInLyph": {
          "description": "ID or reference of the lyph on which this lyph must be permanently positioned",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "internalLyphs"
        },
        "hostedLyphs": {
          "description": "Lyphs that should be projected to the given lyph",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "hostedByLyph"
        },
        "hostedByLyph": {
          "description": "ID or reference of the lyph which this lyph must be projected to",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "hostedLyphs"
        },
        "materials": {
          "description": "Materials in the lyph",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Material"
              }
            ]
          }
        },
        "isTemplate": {
          "description": "Indicates that the lyph defines layers for its subtypes",
          "type": "boolean"
        },
        "subtypes": {
          "description": "Lyphs that are anatomical subtypes of the given lyph",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "supertype"
        },
        "supertype": {
          "description": "Lyph which is an anatomical supertype of the given lyph",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "subtypes"
        },
        "coalescesWith": {
          "description": "A set of lyphs to coalesce with",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          }
        }
      }
    },
    "Border": {
      "description": "Lyph border",
      "extends": {
        "$ref": "#/definitions/Entity"
      },
      "properties": {
        "borders": {
          "description": "Lyph borders",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "hostedNodes": {
                "description": "Nodes on the lyph border",
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/definitions/Node"
                    }
                  ]
                },
                "uniqueItems": true
              },
              "conveyingLyph": {
                "description": "Conveying lyph for the process on the border",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/definitions/Lyph"
                  }
                ]
              }
            }
          },
          "minItems": 4,
          "maxItems": 4
        },
        "borderTypes": {
          "description": "Types of borders: open (value = false) vs closed (value = true)",
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "minItems": 4,
          "maxItems": 4
        },
        "borderInLyph": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ]
        }
      }
    },
    "Graph": {
      "description": "Data model for the force-directed graph shown by the ApiNATOMY lyph viewer",
      "extends": {
        "$ref": "#/definitions/Entity"
      },
      "properties": {
        "nodes": {
          "description": "Graph nodes",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Node"
              }
            ]
          }
        },
        "links": {
          "description": "Graph links",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Link"
              }
            ]
          }
        },
        "materials": {
          "description": "All materials in the model",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Material"
              }
            ]
          }
        },
        "lyphs": {
          "description": "All lyphs in the model",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          }
        },
        "groups": {
          "description": "Groups of entities in the graph that can be hidden and shown again",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Graph"
              }
            ]
          }
        },
        "supergroups": {
          "description": "Groups that contain the current group",
          "type": "array",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Graph"
            }
          ]
        }
      }
    }
  },
  "$ref": "#/definitions/Graph"
}