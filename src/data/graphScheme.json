{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "title": "ApiNATOMY model",
  "description": "The ApiNATOMY model schema provides a contract for the JSON-based input data accepted by the ApiNATOMY lyph viewer, a web application that draws schematic models of physiology.",
  "definitions": {
    "RGBColorScheme": {
      "type": "string",
      "pattern": "#([a-fA-F0-9]{6}|[a-fA-F0-9]{3}){1,2}|(rgb|hsl)a\\((\\d{1,3}%?,\\s?){3}(1|0?\\.\\d+)\\)|(rgb|hsl)\\(\\d{1,3}%?(,\\s?\\d{1,3}%?){2}\\)"
  },
    "Point2Scheme": {
      "description": "Coordinates of a 2d point",
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "minimum": -100,
          "maximum": 100
        },
        "y": {
          "type": "number",
          "minimum": -100,
          "maximum": 100
        }
      }
    },
    "Point3Scheme": {
      "description": "Coordinates of a 3d point",
      "extends": {
        "$ref": "#/definitions/Point2Scheme"
      },
      "properties": {
        "z": {
          "type": "number",
          "minimum": -100,
          "maximum": 100
        }
      }
    },
    "ColorScheme": {
      "description": "Name of the color interpolation scheme as in d3-scale-chromatic",
      "type": "string",
      "enum": [
        "interpolateBrBG",
        "interpolatePRGn",
        "interpolatePiYG",
        "interpolatePuOr",
        "interpolateRdBu",
        "interpolateRdGy",
        "interpolateRdYlBu",
        "interpolateRdYlGn",
        "interpolateSpectral",
        "interpolateBuGn",
        "interpolateBuPu",
        "interpolateGnBu",
        "interpolateOrRd",
        "interpolatePuBuGn",
        "interpolatePuBu",
        "interpolatePuRd",
        "interpolateRdPu",
        "interpolateYlGnBu",
        "interpolateYlGn",
        "interpolateYlOrBr",
        "interpolateYlOrRd",
        "interpolateBlues",
        "interpolateGreens",
        "interpolateGreys",
        "interpolatePurples",
        "interpolateReds",
        "interpolateOranges",
        "interpolateCubehelixDefault",
        "interpolateRainbow",
        "interpolateViridis"
      ]
    },
    "GroupColorScheme": {
      "description": "Scheme to specify color interpolation for a group of entities",
      "type": "object",
      "properties": {
        "scheme": {
          "description": "Interpolation scheme to apply to a group of entities",
          "$ref": "#/definitions/ColorScheme"
        },
        "length": {
          "description": "Optional parameter to define number of colors from the color scheme",
          "type": "number"
        },
        "reversed": {
          "description": "Boolean parameter that indicates whether to pick up colors from the color scheme in reverse order",
          "type": "boolean"
        },
        "offset": {
          "description": "Colors at the beginning and at the end of the color arrays may be too dark or too light, so we skip some percentage",
          "type": "number",
          "minimum": 0,
          "maximum": 1
        }
      }
    },
    "OffsetScheme": {
      "type": "object",
      "properties": {
        "start": {
          "type": "number",
          "default": 0,
          "minimum": 0,
          "maximum": 1
        },
        "end": {
          "type": "number",
          "default": 1,
          "minimum": 0,
          "maximum": 1
        },
        "step": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        }
      }
    },
    "JSONPathScheme": {
      "description": "An object that allows modellers to select a certain set of entities via the JSONPath query format, and lists properties to assign to the entities that match the given query",
      "type": "object",
      "properties": {
        "path": {
          "description": "JSONPath expression to select entities",
          "type": "string"
        },
        "value": {
          "description": "A subset of entity properties to assign to all selected entities",
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    "BorderPart": {
      "description": "One side of the lyph border",
      "type": "object",
      "properties": {
        "hostedNodes": {
          "description": "Nodes that are positioned on the given lyph border. If the same node is positioned on several lyph borders, it is cloned and all its clones are connected by auto-generated collapsible dashed links with the original node.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Node"
              }
            ]
          },
          "uniqueItems": true
        },
        "conveyingLyph": {
          "description": "Conveying lyph to model a nested organ or a process on the lyph border. Such a lyph uses the given border as its rotational axis (the corresponding link entity is auto-generated by the lyph viewer.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ]
        }
      }
    },
    "Entity": {
      "description": "An abstract entity that defines common properties for all types of entities in the ApiNATOMY model.",
      "type": "object",
      "abstract": "true",
      "properties": {
        "id": {
          "description": "Unique entity identifier",
          "type": "string"
        },
        "name": {
          "description": "Entity name",
          "type": "string"
        },
        "class": {
          "description": "Entity class",
          "type": "string",
          "enum": [
            "Lyph",
            "Region",
            "Link",
            "Node",
            "Border",
            "Material",
            "External"
          ],
          "readOnly": true
        },
        "external": {
          "description": "Identifier of the entity in an external ontology such as FMA",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/External"
              }
            ]
          },
          "relatedTo": "externalTo"
        },
        "infoFields": {
          "description": "A set of properties shown in the info panel when the entity is active, i.e., highlighted or selected",
          "type": "object",
          "properties": {
            "text": {
              "description": "Properties that are displayed as text fields",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "objects": {
              "description": "Properties that are displayed as objects",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "lists": {
              "description": "Properties that are displayed as lists",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "text": [
              "id",
              "class",
              "name",
              "external"
            ],
            "objects": [],
            "lists": []
          }
        },
        "inGroups": {
          "description": "Groups that include the current entity",

          "readOnly": true
        },
        "hidden": {
          "description": "A flag to indicate that this entity should not be visualized",
          "type": "boolean"
        },
        "inactive": {
          "description": "A boolean flag to indicate that this entity should not be manipulated (i.e., highlighted or toggled)",
          "type": "boolean"
        },
        "skipLabel": {
          "description": "A flag to indicate that this entity is visualized without the corresponding text label",
          "type": "boolean"
        },
        "assign": {
          "description": "Defines properties to assign to selected entities defined by JSON path starting from the current entity",
          "type": "array",
          "item": {
            "$ref": "#/definitions/JSONPathScheme"
          }
        },
        "interpolate": {
          "description": "Parameters defining schemes to interpolate properties of entities in the JSON path",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "path": {
                "description": "JSONPath expression to select group entities (default = '$.nodes[*]')",
                "type": "string"
              },
              "color": {
                "description": "Color interpolation schema for a group of entities",
                "$ref": "#/definitions/GroupColorScheme"
              },
              "offset": {
                "description": "Interpolation scheme to gradually set offsets for a set of entities",
                "$ref": "#/definitions/OffsetScheme"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    "External": {
      "description": "Reference to an external resource",
      "extends": {
        "$ref": "#/definitions/Entity"
      },
      "properties": {
        "uri": {
          "description": "Reference to an external resource",
          "type": "string"
        },
        "type": {
          "description": "Resource category, i.e., FMA ontology, etc.",
          "type": "string"
        },
        "externalTo": {
          "description": "Model entities that refer to the given resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Entity"
          },
          "relatedTo": "external"
        }
      }
    },
    "Node": {
      "description": "Graph node joins two or more links (processes)",
      "type": "object",
      "extends": {
        "$ref": "#/definitions/Entity"
      },
      "properties": {
        "color": {
          "description": "RGB color",
          "allOf": [{"$ref": "#/definitions/RGBColorScheme"}]
        },
        "hostedByLink": {
          "description": "A link on which the given node is positioned (other side of 'hostedNodes').",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Link"
            }
          ],
          "relatedTo": "hostedNodes"
        },
        "internalInLyph": {
          "description": "A lyph on which this node is positioned (other side of 'internalNodes').",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "internalNodes"
        },
        "internalInRegion": {
          "description": "A region on which this node is positioned (other side of 'internalNodes').",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Region"
            }
          ],
          "relatedTo": "internalNodes"
        },
        "controlNodes": {
          "description": "A set of nodes that define the position of the current node as their center of mass",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Node"
              }
            ]
          }
        },
        "layout": {
          "description": "Positioning constraints, i.e., foci points that attract this node in the force-directed layout",
          "$ref": "#/definitions/Point3Scheme",
          "default": {}
        },
        "fixed": {
          "description": "Fixed nodes are positioned to the desired location",
          "type": "boolean"
        },
        "val": {
          "description": "A value that defines the size of the node",
          "type": "number",
          "minimum": 0,
          "default": 1
        },
        "offset": {
          "description": "Defines position of the node on its host link, i.e, fraction of the link's length starting from the source node",
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "charge": {
          "description": "Defines the force with which this node attracts or repels other nodes in the force-directed graph",
          "type": "number",
          "default": 0
        },
        "collide": {
          "description": "Defines the radius for the collision force in the force-directed layout. The collision force treats nodes as circles with a given radius, rather than points, and prevents nodes from overlapping.",
          "type": "number",
          "default": 5
        },
        "sourceOf": {
          "description": "Links that start in this node",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Link"
              }
            ]
          },
          "relatedTo": "source"
        },
        "targetOf": {
          "description": "Links that end in this node",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Link"
              }
            ]
          },
          "relatedTo": "target"
        },
        "cloneOf": {
          "description": "A node that was copied to create the current node. This field is used to link node clones to the original node. We clone nodes that are hosted by more than one lyph border.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Node"
            }
          ],
          "relatedTo": "clones",
          "readOnly": true
        },
        "clones": {
          "description": "Nodes that are clones of the current node. This field is used to link the ndoe to all its clones. We clone nodes that are hosted by more than one lyph border.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Node"
              }
            ]
          },
          "relatedTo": "cloneOf",
          "readOnly": true
        }
      }
    },
    "Link": {
      "description": "Graph link schematically representing a (part of) physiological process. ",
      "extends": {
        "$ref": "#/definitions/Entity"
      },
      "properties": {
        "source": {
          "description": "Source node of the link",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Node"
            }
          ],
          "relatedTo": "sourceOf"
        },
        "target": {
          "description": "Target node of the link",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Node"
            }
          ],
          "relatedTo": "targetOf"
        },
        "color": {
          "description": "Link color",
          "allOf": [{"$ref": "#/definitions/RGBColorScheme"}]
        },
        "length": {
          "description": "The length of the link",
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "default": 1
        },
        "collapsible": {
          "description": "Indicates that the link disappears when its end nodes are not both constrained",
          "type": "boolean"
        },
        "conveyingLyph": {
          "description": "Conveying lyph for the process represented by the link (other side of 'axis')",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "conveyedBy"
        },
        "geometry": {
          "description": "Defines the geometry and  behavior of the link in the model graph: `link` corresponds to a straight line, `semicircle` defines a line that looks like a semicircle, `rectangle` represents a rectangular line with rounded corners, `path` is a solid path with control points defined by the edge bundling algorithm, `spline` is a link that uses preceding and following nodes on a path to smoothly connect existing links, `force` is a link without a visual object used to attract or repel nodes, `invisible` link is a link with a hidden visual object affected by graph forces that helps to position inner lyph content.",
          "type": "string",
          "enum": [
            "link",
            "semicircle",
            "rectangle",
            "spline",
            "path",
            "force",
            "invisible"
          ],
          "default": "link"
        },
        "infoFields": {
          "default": {
            "text": [
              "length",
              "type"
            ],
            "objects": [
              "source",
              "target",
              "conveyingLyph"
            ]
          }
        },
        "directed": {
          "description": "When set to true, defines a directed edge with arrow at the end",
          "type": "boolean",
          "default": false
        },
        "reversed": {
          "description": "When set to true, used to turn the link's conveying lyph by 180 degrees",
          "type": "boolean",
          "default": false
        },
        "stroke": {
          "description": "Property that defined appearance of the link: `dashed` corresponds to a dashed line while `thick` is an indication for the tool to use a special shader to draw thick lines",
          "type": "string",
          "enum": [
            "dashed",
            "thick"
          ],
          "default": ""
        },
        "linewidth": {
          "description": "Link width for lines that are drawn using custom shader, makes sense in combination with `stroke` set to `dashed`",
          "type": "number",
          "default": "0.003"
        },
        "strength": {
          "description": "Link's strength reflects how strongly the link tries to satisfy its length constraint in the force-directed layout",
          "type": "number"
        },
        "hostedNodes": {
          "description": "Nodes that are positioned on the link",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Node"
              }
            ]
          },
          "relatedTo": "hostedByLink",
          "uniqueItems": true
        },
        "linkOnBorder": {
          "description": "Reference to the lyph border part if the link is created to host the border's conveying lyph",
          "$ref": "#/definitions/BorderPart",
          "readOnly": true
        },
        "type": {
          "description": "Process type annotation",
          "type": "string"
        }
      },
      "required": [
        "source",
        "target"
      ],
      "dependencies": {
        "linewidth": ["stroke"]
      }
    },
    "Region": {
      "description": "Area occupied by bordy part of subsystem",
      "extends": {
        "$ref": "#/definitions/Entity"
      },
      "properties": {
        "color": {
          "description": "Region color",
          "allOf": [{"$ref": "#/definitions/RGBColorScheme"}]
        },
        "points": {
          "description": "Points defining the region border shape",
          "type"  : "array",
          "items" : {
            "$ref" : "#/definitions/Point2Scheme"
          },
          "default": [
            {"x": -10, "y": -10},
            {"x": -10, "y":  10},
            {"x":  10, "y":  10},
            {"x":  10, "y": -10}
          ]
        },
        "border": {
          "description": "Properties that apply to the region's border",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Border"
            }
          ],
          "relatedTo": "host",
          "default"  : {}
        },
        "internalNodes": {
          "description": "Nodes that should be positioned on the given region",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Node"
              }
            ]
          },
          "relatedTo": "internalInRegion",
          "uniqueItems": true
        },
        "internalLyphs": {
          "description": "Lyphs that should be positioned on the given lyph (corresponding axis (link and two nodes) is generated)",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "internalInRegion"
        },
        "internalLyphColumns": {
          "description": "Defines number of columns in the grid layout for the internal lyphs",
          "type": "number",
          "default": 1
        },         "hostedLyphs": {
          "description": "Lyphs that should be projected to the given region",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "hostedByRegion"
        }
      }
    },
    "Lyph": {
      "description": "Data structure that defines the material composition and topology of body parts and physiological processes",
      "extends": {
        "$ref": "#/definitions/Entity"
      },
      "properties": {
        "color": {
          "description": "Lyph color",
          "allOf": [{"$ref": "#/definitions/RGBColorScheme"}]
        },
        "topology": {
          "description": "Lyph topology defines its border shape",
          "type": "string",
          "enum": [
            "TUBE",
            "BAG",
            "BAG2",
            "CYST"
          ],
          "default": "TUBE"
        },
        "conveyedBy"  : {
          "description": "A link conveing the lyph",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Link"
            }
          ],
          "relatedTo": "conveyingLyph"
        },
        "layers": {
          "description": "Lyph layers",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "layerInLyph",
          "uniqueItems": true
        },
        "layerInLyph": {
          "description": "A lyph in which the current lyph is hosted as layer",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "layers"
        },
        "border": {
          "description": "Properties that apply to the lyph's border",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Border"
            }
          ],
          "relatedTo": "host",
          "default"  : {}
        },
        "infoFields": {
          "default": {
            "text": [
              "topology",
              "width"
            ],
            "objects": [ "conveyedBy" ],
            "lists": [ "layers" ]
          }
        },
        "thickness" : {
          "description": "Anatomical lyph thickness defined in the form of power of 1/10",
          "type": "object",
          "properties": {
            "min": {
              "type": "number"
            },
            "max": {
              "type": "number"
            }
          }
        },
        "length": {
          "description": "Anatomical lyph length defined in the form of power of 1/10",
          "type": "object",
          "properties": {
            "min": {
              "type": "number"
            },
            "max": {
              "type": "number"
            }
          }
        },
        "width" : {
          "description": "Width of the visual object representing lyph",
          "type": "number"
        },
        "height": {
          "description": "Height of the visual object representing lyph",
          "type": "number"
        },
        "scale" : {
          "description": "Defines the size of the conveying lyph as percentage of its axis' (link) length",
          "type": "object",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "default": {
            "width" : 40,
            "height": 80
          }
        },
        "layerWidth": {
          "description": "Defines the percentage of the hosting lyph's width occupied by the given lyph as layer",
          "type": "number"
        },
        "internalNodes": {
          "description": "Nodes that should be positioned on the given lyph",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Node"
              }
            ]
          },
          "relatedTo": "internalInLyph",
          "uniqueItems": true
        },
        "internalLyphs": {
          "description": "Lyphs that should be positioned on the given lyph (corresponding axis (link and two nodes) is generated)",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "internalInLyph"
        },
        "internalLyphColumns": {
          "description": "Defines number of columns in the grid layout for the internal lyphs",
          "type": "number",
          "default": 1
        },
        "internalInLyph": {
          "description": "ID or reference of the lyph on which this lyph must be permanently positioned",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "internalLyphs"
        },
        "internalInRegion": {
          "description": "ID or reference of the region on which this lyph must be permanently positioned",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "internalLyphs"
        },
        "hostedLyphs": {
          "description": "Lyphs that should be projected to the given lyph",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "hostedByLyph"
        },
        "hostedByLyph": {
          "description": "ID or reference of the lyph which this lyph must be projected to",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "hostedLyphs"
        },
        "hostedByRegion": {
          "description": "ID or reference of the region which this lyph must be projected to",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "hostedLyphs"
        },
        "materials": {
          "description": "Materials in the lyph",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Material"
              }
            ]
          }
        },
        "isTemplate": {
          "description": "Indicates that the lyph defines layers for its subtypes",
          "type": "boolean"
        },
        "subtypes": {
          "description": "Lyphs that are anatomical subtypes of the given lyph",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "supertype"
        },
        "supertype": {
          "description": "Lyph which is an anatomical supertype of the given lyph",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "subtypes"
        },
        "coalescesWith": {
          "description": "A set of lyphs to coalesce with",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "coalescesWith"
        }
      }
    },
    "Border": {
      "description": "Lyph border schematically models the inner and outer surfaces of a body part whose structure is   defined by the lyph. Each border consists of an array that defines two radial and two longitudinal borders. The inner longitudinal border is always parallel to the lyph's rotational axis.",
      "extends": {
        "$ref": "#/definitions/Entity"
      },
      "properties": {
        "borders": {
          "description": "Lyph or region borders listed in the clockwise order (starting from the inner longitudinal border in lyph). If this property is included to the input model, it must contain as many objects as there are border sides.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BorderPart"
          }
        },
        "host": {
          "description": "The ID or reference to the lyph or region object that owns this border. This property is set internally and should not be assigned.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Lyph"
            },
            {
              "$ref": "#/definitions/Region"
            }
          ],
          "relatedTo": "border",
          "readOnly" : true
        }
      }
    },
    "Material": {
      "description": "Biological materials, chemical elements and compounds",
      "extends": {
        "$ref": "#/definitions/Entity"
      }
    },
    "Graph": {
      "description": "An ApiNATOMY model consists of an extended graph with nested subgraphs, called also groups, which depicture the structural composition of human body organs and/or subsystems, with related measurements and annotations. The graph nodes are arranged by the force-directed graph layout that respects constrains on relative positioning of the model elements, specified in the input data by the modeller.",
      "extends": {
        "$ref": "#/definitions/Entity"
      },
      "properties": {
        "nodes": {
          "description": "Graph nodes connect separate links into semantically meaningful groups that reflect the organizational composition of body parts and/or flow in physiological processes.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Node"
              }
            ]
          }
        },
        "links": {
          "description": "Graph links schematically represent structural elements of the human physiology relevant to the explanation of a certain physiological process: blood vessels, neural connections, pulmonary vessels, etc.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Link"
              }
            ]
          }
        },
        "lyphs": {
          "description": "This field lists all lyph definitions in the model. A Lyph provides a schematic explanation of an entity structure, i.e., tissue layers that consistite a certain organ. The lyph is depicted as a flat shape reflecting its topology (tube, bag or a cyst) and positioned along a conveying link, its axis. By rotating the lyph around its axis, we can create a tube (open, semi-closed or closed on both side) that structurally resembles a meaningful physiological element, i.e., a blood vessel or a neuron connection. Each lyph can be composed of other lyphs as its layers or inner elements, and elements that are positioned on its surface can be specified with the help of the lyph's border concept.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          }
        },
        "regions": {
          "description": "Body organs, systems or surfaces not modelled as lyphs",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Region"
              }
            ]
          }
        },
        "references": {
          "description": "References to external resources",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/External"
              }
            ]
          }
        },
        "materials": {
          "description": "Biological materials, chemical elements and compounds, used in the model",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Material"
              }
            ]
          }
        },
        "groups": {
          "description": "Semantically meaningful groups of entities that share common properties and are manipulated as a group, e.g., hidden or shown in the viewer.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Graph"
              }
            ]
          },
          "relatedTo": "inGroups",
          "default"  : []
        },
        "inGroups": {
          "description": "A group that contains the current group",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/Graph"
              }
            ]
          },
          "relatedTo": "groups",
          "default"  : []
        }
      }
    }
  },
  "$ref": "#/definitions/Graph"
}